name: Build and Release Go Binaries

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [windows, darwin]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Build binary
        run: |
          if [ "${{ matrix.goos }}" == "windows" ]; then
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o myapp-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: myapp-${{ matrix.goos }}-${{ matrix.goos }}*

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: myapp-windows-amd64
          path: ./dist
      - name: Download macOS binary
        uses: actions/download-artifact@v2
        with:
          name: myapp-darwin-amd64
          path: ./dist

      - name: Add .env file
        run: cp .env ./dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/myapp-windows-amd64.exe
          asset_name: myapp-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/myapp-darwin-amd64
          asset_name: myapp-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload .env file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .env
          asset_name: .env
          asset_content_type: application/octet-stream
